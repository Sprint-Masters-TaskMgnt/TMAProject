<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Fetch Tasks by Project ID</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f4f4f9;
            padding: 20px;
        }

        h1, h2, h3 {
            text-align: center;
            color: #333;
        }

        form {
            margin: 20px auto;
            text-align: center;
        }

            form label {
                font-size: 1.2rem;
            }

            form input {
                margin-left: 10px;
                padding: 10px;
                width: 250px;
                font-size: 1rem;
            }

            form button {
                padding: 10px 20px;
                font-size: 1rem;
                background-color: #007bff;
                color: white;
                border: none;
                border-radius: 5px;
                cursor: pointer;
            }

                form button:hover {
                    background-color: #0056b3;
                }

        #projectDetails {
            margin: 20px auto;
            padding: 15px;
            background: white;
            border: 1px solid #ddd;
            border-radius: 10px;
            max-width: 600px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }

        .task-list {
            display: flex;
            flex-wrap: wrap;
            gap: 20px;
            justify-content: center;
            margin-top: 20px;
        }

        .task-box {
            background: #ffffff;
            border: 1px solid #ddd;
            border-radius: 8px;
            padding: 15px;
            width: 280px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }

            .task-box strong {
                display: block;
                margin-bottom: 5px;
            }

        #downloadButtonContainer {
            text-align: center;
            margin-top: 20px;
        }

        #downloadReportBtn {
            padding: 10px 20px;
            font-size: 1rem;
            background-color: #28a745;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }

            #downloadReportBtn:hover {
                background-color: #218838;
            }
    </style>
</head>
<body>
    <h1>Fetch Tasks by Project ID</h1>

    <form>
        <label for="projectId">Enter Project ID:</label>
        <input type="text" id="projectId" name="projectId" placeholder="Enter project ID">
        <button type="button" onclick="fetchProjectDetails()">Fetch Tasks</button>
    </form>

    <!-- Div to display project details -->
    <div id="projectDetails"></div>

    <!-- Download button -->
    <div id="downloadButtonContainer" style="display: none;">
        <button id="downloadReportBtn">Download Report</button>
    </div>

    <script>const apiBaseUrl = "https://localhost:7071/api/TaskTbls";

        function fetchProjectDetails() {
            const projectId = document.getElementById("projectId").value.trim();

            if (!projectId) {
                alert("Please enter a valid Project ID.");
                return;
            }

            const fetchUrl = ${apiBaseUrl}/getProjectDetails/${projectId};

            fetch(fetchUrl)
                .then((response) => {
                    if (!response.ok) {
                        throw new Error(No project found with ID: ${projectId});
                    }
                    return response.json();
                })
                .then((data) => {
                    displayProjectDetails(data);
                })
                .catch((error) => {
                    console.error("Error:", error.message);
                    document.getElementById("projectDetails").innerHTML = `
                            <p style="color: red;">Error: ${error.message}</p>`;
                    document.getElementById("downloadButtonContainer").style.display = "none";
                });
        }

        function displayProjectDetails(project) {
            const projectDetailsDiv = document.getElementById("projectDetails");
            projectDetailsDiv.innerHTML = `
                    <h2>Project Details</h2>
                    <p><strong>Project Name:</strong> ${project.projectName}</p>
                    <p><strong>Description:</strong> ${project.description}</p>
                    <p><strong>Start Date:</strong> ${new Date(project.startDate).toLocaleDateString()}</p>
                    <p><strong>End Date:</strong> ${new Date(project.endDate).toLocaleDateString()}</p>
                `;

            // Render tasks in a list
            const taskList = `
                    <h3>Tasks</h3>
                    <div class="task-list">
                        ${project.tasks.map(task => `
                            <div class="task-box">
                                <strong>Task Name:</strong> ${task.taskName}
                                <strong>Description:</strong> ${task.description}
                                <strong>Start Date:</strong> ${new Date(task.taskStartDate).toLocaleDateString()}
                                <strong>End Date:</strong> ${new Date(task.taskEndDate).toLocaleDateString()}
                                <strong>Priority:</strong> ${task.priority}
                                <strong>Status:</strong> ${task.status}
                            </div>
                        `).join('')}
                    </div>
                `;
            projectDetailsDiv.insertAdjacentHTML('beforeend', taskList);

            // Show download button
            const downloadButtonContainer = document.getElementById("downloadButtonContainer");
            downloadButtonContainer.style.display = "block";
            document.getElementById("downloadReportBtn").onclick = () => downloadProjectReport(project.projectId);
        }

        function downloadProjectReport(projectId) {
            const downloadUrl = ${apiBaseUrl}/downloadProjectReport/${projectId};

            fetch(downloadUrl)
                .then((response) => {
                    if (!response.ok) {
                        throw new Error(Failed to download report: ${response.statusText});
                    }
                    return response.blob();
                })
                .then((blob) => {
                    const url = window.URL.createObjectURL(blob);
                    const a = document.createElement("a");
                    a.style.display = "none";
                    a.href = url;
                    a.download = Project_${projectId}_Report.csv;
                    document.body.appendChild(a);
                    a.click();
                    window.URL.revokeObjectURL(url);
                    document.body.removeChild(a);
                })
                .catch((error) => {
                    console.error("Error:", error.message);
                    alert(Error: ${error.message});
                });
        }</script>
</body>
</html>