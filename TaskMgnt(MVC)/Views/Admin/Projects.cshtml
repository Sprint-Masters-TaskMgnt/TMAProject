<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Project Management</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 20px;
            background-color: #f4f4f4;
        }

        h1, h2 {
            text-align: center;
            color: #2c3e50;
        }

        #ProjectForm {
            background-color: white;
            padding: 20px;
            border-radius: 5px;
            box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);
            max-width: 500px;
            margin: 20px auto;
        }

        input[type="text"], input[type="date"], input[type="number"] {
            width: 100%;
            padding: 8px;
            margin: 10px 0;
            border-radius: 4px;
            border: 1px solid #ccc;
        }

        button {
            padding: 10px;
            width: 100%;
            background-color: #3498db;
            border: none;
            color: white;
            cursor: pointer;
            font-size: 16px;
        }

            button:hover {
                background-color: #2980b9;
            }

        #responseMessage {
            margin-top: 20px;
            text-align: center;
        }

        #ProjectsList {
            margin-top: 30px;
        }

        table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
        }

        th, td {
            padding: 12px;
            text-align: left;
            border-bottom: 1px solid #ddd;
        }

        th {
            background-color: #2980b9;
            color: white;
        }
    </style>
</head>
<body>
    <h1>Project Management</h1>

    <div id="ProjectForm">
        <h2>Add/Update Project</h2>
        <label for="projectId">Project ID:</label>
        <input type="number" id="projectId" name="projectId">

        <label for="projectName">Project Name:</label>
        <input type="text" id="projectName" name="projectName" required>

        <label for="description">Description:</label>
        <input type="text" id="description" name="description" required>

        <label for="startDate">Start Date:</label>
        <input type="date" id="startDate" name="startDate" required>

        <label for="endDate">End Date:</label>
        <input type="date" id="endDate" name="endDate" required>

        <label for="status">Status:</label>
        <input type="text" id="status" name="status" required>

        <button type="button" onclick="postProject()">POST Project</button>
        <button type="button" onclick="putProject()">PUT Project</button>
        <button type="button" onclick="deleteProject()">DELETE Project</button>
    </div>

    <label id="responseMessage"></label>

    <h2>View All Projects</h2>
    <button type="button" onclick="fetchAllProjects()">Get All Projects</button>


    <div id="ProjectsList"></div>

    <script>
        const apiUrl = 'https://localhost:7071/api/Projects'; // Adjust API URL if needed

        function displayMessage(message, isError = false) {
            const responseLabel = document.getElementById("responseMessage");
            responseLabel.style.color = isError ? "red" : "green";
            responseLabel.textContent = message;
        }

        function postProject() {
            const projectData = {
                projectId: parseInt(document.getElementById("projectId").value),
                projectName: document.getElementById("projectName").value,
                description: document.getElementById("description").value,
                startDate: document.getElementById("startDate").value,
                endDate: document.getElementById("endDate").value,
                status: document.getElementById("status").value
            };

            fetch(apiUrl, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(projectData)
            })
                .then(response => response.ok ? response.json() : Promise.reject('Failed to POST'))
                .then(data => displayMessage('Project added successfully.'))
                .catch(error => displayMessage(error, true));
        }

        function putProject() {
            const projectId = document.getElementById("projectId").value;
            const projectData = {
                projectId: parseInt(projectId),
                projectName: document.getElementById("projectName").value,
                description: document.getElementById("description").value,
                startDate: document.getElementById("startDate").value,
                endDate: document.getElementById("endDate").value,
                status: document.getElementById("status").value
            };

            fetch(`${apiUrl}/${projectId}`, {
                method: 'PUT',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(projectData)
            })
                .then(response => response.ok ? displayMessage('Project updated successfully.') : Promise.reject('Failed to PUT'))
                .catch(error => displayMessage(error, true));
        }

        function deleteProject() {
            const projectId = document.getElementById("projectId").value;

            fetch(`${apiUrl}/${projectId}`, {
                method: 'DELETE',
                headers: { 'Content-Type': 'application/json' }
            })
                .then(response => response.ok ? displayMessage('Project deleted successfully.') : Promise.reject('Failed to DELETE'))
                .catch(error => displayMessage(error, true));
        }

        function fetchAllProjects() {
            fetch(apiUrl)
                .then(response => response.json())
                .then(data => displayProjects(data))
                .catch(error => displayMessage('Error fetching projects.', true));
        }

        function displayProjects(projects) {
            const projectsList = document.getElementById("ProjectsList");
            projectsList.innerHTML = `<h3>Project List:</h3><table>
                    <tr><th>ID</th><th>Name</th><th>Description</th><th>Start Date</th><th>End Date</th><th>Status</th></tr>
                    ${projects.map(project => `
                        <tr>
                            <td>${project.projectId}</td>
                            <td>${project.projectName}</td>
                            <td>${project.description}</td>
                            <td>${project.startDate}</td>
                            <td>${project.endDate}</td>
                            <td>${project.status}</td>
                        </tr>`).join('')}
                </table>`;
        }


    </script>
</body>
</html>
