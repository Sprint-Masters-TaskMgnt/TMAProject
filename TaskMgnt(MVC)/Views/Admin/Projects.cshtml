@{
    ViewBag.Title = "Project";
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Project Management</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 20px;
            background-color: #f4f4f4;
        }

        h1, h2 {
            text-align: center;
            color: #2c3e50;
        }

        #ProjectForm {
            background-color: #fff;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);
            max-width: 500px;
            margin: 20px auto;
        }

        .form-group {
            margin-bottom: 15px;
            display: flex;
            flex-direction: column;
        }

            .form-group label {
                font-weight: bold;
                margin-bottom: 5px;
            }

            .form-group input {
                padding: 10px;
                border: 1px solid #ccc;
                border-radius: 4px;
                font-size: 14px;
            }

        button {
            padding: 10px 15px;
            border: none;
            border-radius: 4px;
            color: #fff;
            background-color: #3498db;
            cursor: pointer;
            font-size: 16px;
            margin-bottom: 10px;
            width: 100%;
        }

            button:hover {
                background-color: #2980b9;
            }

        /* Popup Modal Styles */
        .popup-modal {
            display: none;
            position: fixed;
            z-index: 1;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
            justify-content: center;
            align-items: center;
        }

        .popup-content {
            background-color: white;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.3);
            text-align: center;
            font-size: 16px;
        }

        .close-popup {
            color: #aaa;
            float: right;
            font-size: 28px;
            font-weight: bold;
            cursor: pointer;
        }

            .close-popup:hover {
                color: black;
            }

        table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
            background-color: #fff;
            box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);
        }

        th, td {
            padding: 10px 15px;
            text-align: left;
            border: 1px solid #ddd;
        }

        th {
            background-color: #2980b9;
            color: #fff;
        }

        td {
            background-color: #f9f9f9;
        }
    </style>
</head>
<body>
    <h1>Project Management</h1>

    <div id="ProjectForm">
        <h2>Add/Update Project</h2>
        <div class="form-group">
            <label for="projectId">Project ID:</label>
            <input type="number" id="projectId" name="projectId">
        </div>

        <div class="form-group">
            <label for="projectName">Project Name:</label>
            <input type="text" id="projectName" name="projectName" required>
        </div>

        <div class="form-group">
            <label for="description">Description:</label>
            <input type="text" id="description" name="description" required>
        </div>

        <div class="form-group">
            <label for="startDate">Start Date:</label>
            <input type="datetime-local" id="startDate" name="startDate" required>
        </div>

        <div class="form-group">
            <label for="endDate">End Date:</label>
            <input type="datetime-local" id="endDate" name="endDate" required>
        </div>

        <div class="form-group">
            <label for="status">Status:</label>
            <input type="text" id="status" name="status" required>
        </div>

        <button onclick="postProject()">POST Project</button>
        <button onclick="putProject()">PUT Project</button>
        <button onclick="deleteProject()">DELETE Project</button>
    </div>

    <div id="responseMessage"></div>

    <h2>View All Projects</h2>
    <button onclick="fetchAllProjects()">Get All Projects</button>
    <div id="ProjectsList"></div>

    <!-- Popup Modal for displaying messages -->
    <div id="messagePopup" class="popup-modal">
        <div class="popup-content">
            <span class="close-popup" onclick="closePopup()">&times;</span>
            <div id="popupMessage"></div>
        </div>
    </div>

    <script>
        const apiUrl = 'https://localhost:7071/api/Projects';

        function displayMessage(message, isError = false) {
            document.getElementById("popupMessage").textContent = message;
            document.getElementById("popupMessage").style.color = isError ? "red" : "green";
            openPopup();
        }

        function openPopup() {
            document.getElementById("messagePopup").style.display = 'flex';
        }

        function closePopup() {
            document.getElementById("messagePopup").style.display = 'none';
        }

        function postProject() {
            const projectData = getFormData();
            fetch(apiUrl, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(projectData)
            })
                .then(response => response.ok ? displayMessage('Project added successfully.') : Promise.reject('Failed to POST'))
                .catch(error => displayMessage(error, true));
        }

        function putProject() {
            const projectId = document.getElementById("projectId").value;
            const projectData = getFormData();
            fetch(`${apiUrl}/${projectId}`, { // Corrected URL syntax
                method: 'PUT',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(projectData)
            })
                .then(response => response.ok ? displayMessage('Project updated successfully.') : Promise.reject('Failed to PUT'))
                .catch(error => displayMessage(error, true));
        }

        function deleteProject() {
            const projectId = document.getElementById("projectId").value;
            fetch(`${apiUrl}/${projectId}`, { // Corrected URL syntax
                method: 'DELETE',
                headers: { 'Content-Type': 'application/json' }
            })
                .then(response => response.ok ? displayMessage('Project deleted successfully.') : Promise.reject('Failed to DELETE'))
                .catch(error => displayMessage(error, true));
        }

        function fetchAllProjects() {
            fetch(apiUrl)
                .then(response => response.json())
                .then(data => displayProjects(data))
                .catch(error => displayMessage('Error fetching projects.', true));
        }

        function displayProjects(projects) {
            const projectsList = document.getElementById("ProjectsList");
            if (projects.length === 0) {
                projectsList.innerHTML = "<p>No projects found.</p>";
                return;
            }
            const rows = projects.map(project => `
                         <tr>
                             <td>${project.projectId}</td>
                             <td>${project.projectName}</td>
                             <td>${project.description}</td>
                             <td>${new Date(project.startDate).toLocaleString()}</td>
                             <td>${new Date(project.endDate).toLocaleString()}</td>
                             <td>${project.status}</td>
                         </tr>`).join('');
            projectsList.innerHTML = `
                         <table>
                             <tr>
                                 <th>ID</th>
                                 <th>Name</th>
                                 <th>Description</th>
                                 <th>Start Date</th>
                                 <th>End Date</th>
                                 <th>Status</th>
                             </tr>
                             ${rows}
                         </table>`;
        }

        function getFormData() {
            return {
                projectId: parseInt(document.getElementById("projectId").value) || null,
                projectName: document.getElementById("projectName").value,
                description: document.getElementById("description").value,
                startDate: document.getElementById("startDate").value,
                endDate: document.getElementById("endDate").value,
                status: document.getElementById("status").value
            };
        }
    </script>
</body>
</html>
