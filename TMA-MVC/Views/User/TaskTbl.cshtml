<!--<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Task Management</title>
    <!-- Bootstrap CSS -->
<!--<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css">
    <style>
        .modal-header {
            background-color: #007bff;
            color: white;
        }

        .form-group label {
            font-weight: bold;
        }
    </style>
</head>
<body>
    <div class="container mt-5">
        <h2>Task Management System</h2>
        <button class="btn btn-success mb-3" id="addTaskBtn">Add Task</button>
        <table class="table table-striped" id="taskTable">
            <thead>
                <tr>
                    <th>Task ID</th>
                    <th>Name</th>
                    <th>Project ID</th>
                    <th>Assigned User</th>
                    <th>Priority</th>
                    <th>Status</th>
                    <th>Start Date</th>
                    <th>End Date</th>
                    <th>Description</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>-->
<!-- Task rows populated dynamically -->
<!--</tbody>
    </table>
</div>-->
<!-- Task Modal -->
<!--<div class="modal fade" id="taskModal" tabindex="-1" aria-labelledby="taskModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="taskModalLabel">Add/Edit Task</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="taskForm">
                    <div class="form-group">
                        <label for="taskId">Task ID</label>
                        <input type="number" class="form-control" id="taskId" required>
                    </div>
                    <div class="form-group">
                        <label for="taskName">Task Name</label>
                        <input type="text" class="form-control" id="taskName" required>
                    </div>
                    <div class="form-group">
                        <label for="projectId">Project ID</label>
                        <input type="number" class="form-control" id="projectId" required>
                    </div>
                    <div class="form-group">
                        <label for="assignedToUserId">Assigned To (User ID)</label>
                        <input type="number" class="form-control" id="assignedToUserId" required>
                    </div>
                    <div class="form-group">
                        <label for="priority">Priority</label>
                        <select class="form-control" id="priority" required>
                            <option value="Low">Low</option>
                            <option value="Medium">Medium</option>
                            <option value="High">High</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="status">Status</label>
                        <select class="form-control" id="status" required>
                            <option value="Not Started">Not Started</option>
                            <option value="In Progress">In Progress</option>
                            <option value="Completed">Completed</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="taskStartDate">Start Date</label>
                        <input type="date" class="form-control" id="taskStartDate" required>
                    </div>
                    <div class="form-group">
                        <label for="taskEndDate">End Date</label>
                        <input type="date" class="form-control" id="taskEndDate" required>
                    </div>
                    <div class="form-group">
                        <label for="description">Description</label>
                        <textarea class="form-control" id="description" rows="3" required></textarea>
                    </div>
                    <button type="submit" class="btn btn-primary">Save Task</button>
                </form>
            </div>
        </div>
    </div>
</div>-->
<!-- Scripts -->
<!--<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>-->
<!--<script>
                const apiUrl = 'https://localhost:7071/api/TaskTbls'; // Task API
                const userApiUrl = 'https://localhost:7071/api/Users'; // User API for validation

                // Display response messages
                function displayMessage(message, isError = false) {
                    const responseMessage = document.getElementById("responseMessage");
                    responseMessage.style.color = isError ? "red" : "green";
                    responseMessage.textContent = message;
                }

                // Helper to get form data
                function getFormData() {
                    const taskId = document.getElementById("taskId").value;
                    const taskName = document.getElementById("taskName").value;
                    const projectId = document.getElementById("projectId").value;
                    const assignedToUserId = document.getElementById("assignedToUserId").value;
                    const taskStartDate = document.getElementById("taskStartDate").value;
                    const taskEndDate = document.getElementById("taskEndDate").value;
                    const priority = document.getElementById("priority").value;
                    const status = document.getElementById("status").value;
                    const description = document.getElementById("description").value;

                    if (!taskId || !taskName || !projectId || !assignedToUserId || !taskStartDate || !taskEndDate || !priority || !status ) {
                        displayMessage("All fields are required.", true);
                        return null;
                    }

                    return {
                        taskId: parseInt(taskId),
                        taskName,
                        projectId: parseInt(projectId),
                        assignedToUserId,
                        taskStartDate,
                        taskEndDate,
                        priority,
                        status,
                        description
                    };
                }

                // Assign Task
                function assignTask() {
                    const assignedToUserId = document.getElementById("assignedToUserId").value;
                    if (!assignedToUserId) {
                        return displayMessage("Please enter a valid User Id.", true);
                    }

                    fetch(`${userApiUrl}/${assignedToUserId}`)
                        .then(response => {
                            if (!response.ok) {
                                throw new Error(`User with ID ${assignedToUserId} does not exist.`);
                            }
                            return response.json();
                        })
                        .then(() => {
                            createTask(); // Call create task if user validation succeeds
                        })
                        .catch(error => displayMessage(error.message, true));
                }

                // Create Task (POST)
                function createTask() {
                    const taskData = getFormData();
                    if (!taskData) return;

                    fetch(apiUrl, {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify(taskData)
                    })
                        .then(response => {
                            if (!response.ok) {
                                throw new Error("Failed to create task.");
                            }
                            return response.json();
                        })
                        .then(() => {
                            displayMessage("Task assigned successfully.");
                            fetchAllTasks();
                        })
                        .catch(error => displayMessage(error.message, true));
                }


                // Update Task (PUT)
                function updateTask() {
                    const taskData = getFormData();

                    if (!taskData || !taskData.taskId) {
                        return displayMessage("Task ID is required for updates.", true);
                    }

                    fetch(`${apiUrl}/${taskData.taskId}`, {
                        method: 'PUT',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify(taskData)
                    })
                        .then(response => {
                            // Check if response is OK
                            if (!response.ok) {
                                return response.json().then(err => {
                                    throw new Error(err?.message || "Failed to update task.");
                                });
                            }

                            // Handle cases where response might be empty
                            if (response.status === 204) {
                                return { Message: "Task updated successfully." };
                            }
                            return response.json(); // Parse JSON if response exists
                        })
                        .then(data => {
                            const message = data?.Message || "Task updated successfully.";
                            displayMessage(message);
                            fetchAllTasks(); // Refresh the task list
                        })
                        .catch(error => displayMessage(`Error: ${error.message}`, true));
                }



                // Delete Task (DELETE)
                function deleteTaskById() {
                    const taskId = document.getElementById("taskId").value;
                    if (!taskId) {
                        return displayMessage("Task ID is required for deletion.", true);
                    }

                    fetch(`${apiUrl}/${taskId}`, {
                        method: 'DELETE'
                    })
                        .then(response => {
                            if (!response.ok) {
                                throw new Error("Failed to delete task.");
                            }
                            displayMessage("Task deleted successfully.");
                            fetchAllTasks();
                        })
                        .catch(error => displayMessage(error.message, true));
                }

                // Get Task by ID (GET)
                function getTaskById() {
                    const taskId = document.getElementById("retrieveTaskId").value;
                    if (!taskId) {
                        return displayMessage("Please enter a valid Task ID.", true);
                    }

                    fetch(`${apiUrl}/${taskId}`)
                        .then(response => response.json())
                        .then(task => {
                            displayMessage(`Task Retrieved: ${JSON.stringify(task)}`);
                        })
                        .catch(error => displayMessage(error.message, true));
                }

                // Fetch All Tasks (GET)
                function fetchAllTasks() {
                    fetch(apiUrl)
                        .then(response => response.json())
                        .then(tasks => displayTasks(tasks))
                        .catch(error => displayMessage(error.message, true));
                }

                // Display tasks
                function displayTasks(tasks) {
                    const taskList = document.getElementById("taskList");
                    taskList.innerHTML = tasks.map(task =>
                        `<div>
                                    <p>Task ID: ${task.taskId}</p>
                                    <p>Task Name: ${task.taskName}</p>
                                    <p>Project ID: ${task.projectId}</p>
                                    <p>Assigned To: ${task.assignedToUserId}</p>
                                    <p>Start Date: ${task.taskStartDate}</p>
                                    <p>End Date: ${task.taskEndDate}</p>
                                    <p>Priority: ${task.priority}</p>
                                    <p>Status: ${task.status}</p>
                                    <p>Description: ${task.description}</p>
                                </div>
                                <hr>`
                    ).join('');
                }
            </script>
        </body>
        </html>

<!--<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Task Management</title>-->
<!-- Bootstrap CSS -->
<!--<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css">
    <style>
        .modal-header {
            background-color: #007bff;
            color: white;
        }

        .form-group label {
            font-weight: bold;
        }
    </style>
</head>
<body>
    <div class="container mt-5">
        <h2>Task Management System</h2>
        <button class="btn btn-success mb-3" id="addTaskBtn">Add Task</button>
        <table class="table table-striped" id="taskTable">
            <thead>
                <tr>
                    <th>Task ID</th>
                    <th>Name</th>
                    <th>Project ID</th>
                    <th>Assigned User</th>
                    <th>Priority</th>
                    <th>Status</th>
                    <th>Start Date</th>
                    <th>End Date</th>
                    <th>Description</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>-->
<!-- Task rows populated dynamically -->
<!--</tbody>
    </table>
</div>-->
<!-- Task Modal -->
<!--<div class="modal fade" id="taskModal" tabindex="-1" aria-labelledby="taskModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="taskModalLabel">Add/Edit Task</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="taskForm">
                    <div class="form-group">
                        <label for="taskId">Task ID</label>
                        <input type="number" class="form-control" id="taskId" required>
                    </div>
                    <div class="form-group">
                        <label for="taskName">Task Name</label>
                        <input type="text" class="form-control" id="taskName" required>
                    </div>
                    <div class="form-group">
                        <label for="projectId">Project ID</label>
                        <input type="number" class="form-control" id="projectId" required>
                    </div>
                    <div class="form-group">
                        <label for="assignedToUserId">Assigned To (User ID)</label>
                        <input type="number" class="form-control" id="assignedToUserId" required>
                    </div>
                    <div class="form-group">
                        <label for="priority">Priority</label>
                        <select class="form-control" id="priority" required>
                            <option value="Low">Low</option>
                            <option value="Medium">Medium</option>
                            <option value="High">High</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="status">Status</label>
                        <select class="form-control" id="status" required>
                            <option value="Not Started">Not Started</option>
                            <option value="In Progress">In Progress</option>
                            <option value="Completed">Completed</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="taskStartDate">Start Date</label>
                        <input type="date" class="form-control" id="taskStartDate" required>
                    </div>
                    <div class="form-group">
                        <label for="taskEndDate">End Date</label>
                        <input type="date" class="form-control" id="taskEndDate" required>
                    </div>
                    <div class="form-group">
                        <label for="description">Description</label>
                        <textarea class="form-control" id="description" rows="3" required></textarea>
                    </div>
                    <button type="submit" class="btn btn-primary">Save Task</button>
                </form>
            </div>
        </div>
    </div>
</div>-->
-->
<!--@*Scripts
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>*@-->
<!--<script>
        const apiUrl = 'https://localhost:7071/api/TaskTbls';

        $(document).ready(function () {
            loadTasks();

            // Open modal for adding a task
            $('#addTaskBtn').click(function () {
                $('#taskModalLabel').text('Add Task');
                $('#taskForm')[0].reset();
                $('#taskId').prop('disabled', false);
                $('#taskModal').modal('show');
            });

            // Handle task form submission
            $('#taskForm').submit(function (event) {
                event.preventDefault();

                const task = {
                    taskId: $('#taskId').val(),
                    taskName: $('#taskName').val(),
                    projectId: $('#projectId').val(),
                    assignedToUserId: $('#assignedToUserId').val(),
                    priority: $('#priority').val(),
                    status: $('#status').val(),
                    taskStartDate: $('#taskStartDate').val(),
                    taskEndDate: $('#taskEndDate').val(),
                    description: $('#description').val()
                };

                if ($('#taskModalLabel').text() === 'Add Task') {
                    // Create new task
                    $.post(apiUrl, task, function () {
                        $('#taskModal').modal('hide');
                        loadTasks();
                    }).fail(function () {
                        alert('Failed to add task.');
                    });
                } else {
                    // Update existing task
                    $.ajax({
                        url: `${apiUrl}/${task.taskId}`,
                        method: 'PUT',
                        contentType: 'application/json',
                        data: JSON.stringify(task),
                        success: function () {
                            $('#taskModal').modal('hide');
                            loadTasks();
                        },
                        error: function () {
                            alert('Failed to update task.');
                        }
                    });
                }
            });

            // Load tasks into table
            function loadTasks() {
                $.get(apiUrl, function (tasks) {
                    $('#taskTable tbody').empty();
                    tasks.forEach(task => {
                        $('#taskTable tbody').append(`
                                <tr>
                                    <td>${task.taskId}</td>
                                    <td>${task.taskName}</td>
                                    <td>${task.projectId}</td>
                                    <td>${task.assignedToUserId}</td>
                                    <td>${task.priority}</td>
                                    <td>${task.status}</td>
                                    <td>${task.taskStartDate}</td>
                                    <td>${task.taskEndDate}</td>
                                    <td>${task.description}</td>
                                    <td>
                                        <button class="btn btn-primary btn-sm editTaskBtn" data-id="${task.taskId}">Edit</button>
                                        <button class="btn btn-danger btn-sm deleteTaskBtn" data-id="${task.taskId}">Delete</button>
                                    </td>
                                </tr>
                            `);
                    });
                });
            }

            // Edit task
            $(document).on('click', '.editTaskBtn', function () {
                const taskId = $(this).data('id');
                $.get(`${apiUrl}/${taskId}`, function (task) {
                    $('#taskModalLabel').text('Edit Task');
                    $('#taskId').val(task.taskId).prop('disabled', true);
                    $('#taskName').val(task.taskName);
                    $('#projectId').val(task.projectId);
                    $('#assignedToUserId').val(task.assignedToUserId);
                    $('#priority').val(task.priority);
                    $('#status').val(task.status);
                    $('#taskStartDate').val(task.taskStartDate);
                    $('#taskEndDate').val(task.taskEndDate);
                    $('#description').val(task.description);
                    $('#taskModal').modal('show');
                });
            });

            // Delete task
            $(document).on('click', '.deleteTaskBtn', function () {
                const taskId = $(this).data('id');
                if (confirm('Are you sure you want to delete this task?')) {
                    $.ajax({
                        url: `${apiUrl}/${taskId}`,
                        method: 'DELETE',
                        success: function () {
                            loadTasks();
                        },
                        error: function () {
                            alert('Failed to delete task.');
                        }
                    });
                }
            });
        });
    </script>
</body>
</html>-->

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Task Management</title>
    <!-- Bootstrap CSS for styling -->
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css">
    <style>
        /* Custom CSS for additional styling */
        body {
            font-family: Arial, sans-serif;
        }

        .container {
            max-width: 1000px;
        }

        h2 {
            margin-bottom: 20px;
        }

        .modal-header {
            background-color: #007bff;
            color: white;
        }

        .modal-body {
            padding: 20px;
        }

        .form-group label {
            font-weight: bold;
        }

        .modal-footer {
            text-align: right;
        }
    </style>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
</head>
<body>

    <div class="container mt-5">
        <h2>Task Management</h2>
        <button id="addTaskBtn" class="btn btn-success mb-3">Add Task</button>
        <table class="table table-striped" id="taskTable">
            <thead>
                <tr>
                    <th>Task ID</th>
                    <th>Task Name</th>
                    <th>Assigned User ID</th>
                    <th>Project ID</th>
                    <th>Status</th>
                    <th>Priority</th>
                    <th>Start Date</th>
                    <th>End Date</th>
                    <th>Description</th>
                    @*<th>Actions</th>*@
                </tr>
            </thead>
            <tbody>
                <!-- Task rows will be populated here via AJAX -->
            </tbody>
        </table>
    </div>

    <!-- Add/Edit Task Modal -->
    <div class="modal fade" id="taskModal" tabindex="-1" role="dialog" aria-labelledby="taskModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="taskModalLabel">Add/Edit Task</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <form id="taskForm">
                        <div class="form-group">
                            <label for="taskId">Task ID</label>
                            <input type="number" class="form-control" id="taskId" required>
                        </div>
                        <div class="form-group">
                            <label for="taskName">Task Name</label>
                            <input type="text" class="form-control" id="taskName" required>
                        </div>
                        <div class="form-group">
                            <label for="assignedToUserId">Assigned User ID</label>
                            <input type="number" class="form-control" id="assignedToUserId" required>
                        </div>
                        <div class="form-group">
                            <label for="projectId">Project ID</label>
                            <input type="number" class="form-control" id="projectId" required>
                        </div>
                        <div class="form-group">
                            <label for="status">Status</label>
                            <select class="form-control" id="status" required>
                                <option value="Not Started">Not Started</option>
                                <option value="In Progress">In Progress</option>
                                <option value="Completed">Completed</option>
                            </select>
                        </div>
                        <div class="form-group">
                            <label for="priority">Priority</label>
                            <select class="form-control" id="priority" required>
                                <option value="Low">Low</option>
                                <option value="Medium">Medium</option>
                                <option value="High">High</option>
                            </select>
                        </div>
                        <div class="form-group">
                            <label for="taskStartDate">Start Date</label>
                            <input type="date" class="form-control" id="taskStartDate" required>
                        </div>
                        <div class="form-group">
                            <label for="taskEndDate">End Date</label>
                            <input type="date" class="form-control" id="taskEndDate" required>
                        </div>
                        <div class="form-group">
                            <label for="description">Description</label>
                            <textarea class="form-control" id="description" rows="3" required></textarea>
                        </div>
                        <button type="submit" class="btn btn-primary">Save</button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <script>
        const apiBaseUrl = "https://localhost:7071/api/TaskTbls"; // Update with your API endpoint

        $(document).ready(function () {
            loadTasks();

            $('#addTaskBtn').on('click', function () {
                $('#taskModalLabel').text('Add Task');
                $('#taskForm')[0].reset();
                $('#taskId').val(''); // Clear Task ID for new tasks
                $('#taskModal').modal('show');
            });

            $('#taskForm').on('submit', function (e) {
                e.preventDefault();

                const taskId = $('#taskId').val();
                const taskData = {
                    taskId: taskId ,
                    taskName: $('#taskName').val(),
                    assignedToUserId: $('#assignedToUserId').val(),
                    projectId: $('#projectId').val(),
                    status: $('#status').val(),
                    priority: $('#priority').val(),
                    taskStartDate: $('#taskStartDate').val(),
                    taskEndDate: $('#taskEndDate').val(),
                    description: $('#description').val()
                };

                if (taskId) {
                    updateTask(taskId, taskData);
                } else {
                    createTask(taskData);
                }
            });

            function loadTasks() {
                $('#taskTable tbody').empty();

                $.get(apiBaseUrl, function (tasks) {
                    tasks.forEach(task => {
                        const row = `
                            <tr>
                                <td>${task.taskId}</td>
                                <td>${task.taskName}</td>
                                <td>${task.assignedToUserId}</td>
                                <td>${task.projectId}</td>
                                <td>${task.status}</td>
                                <td>${task.priority}</td>
                                <td>${task.taskStartDate}</td>
                                <td>${task.taskEndDate}</td>
                                <td>${task.description}</td>
                                <td>
                                    <button class="btn btn-sm btn-primary editBtn" data-id="${task.taskId}">Edit</button>
                                    <button class="btn btn-sm btn-danger deleteBtn" data-id="${task.taskId}">Delete</button>
                                </td>
                            </tr>
                        `;
                        $('#taskTable tbody').append(row);
                    });
                });
            }

            function createTask(taskData) {
                $.post(apiBaseUrl, taskData, function () {
                    $('#taskModal').modal('hide');
                    loadTasks();
                });
            }

            function updateTask(taskId, taskData) {
                $.ajax({
                    url: `${apiBaseUrl}/${taskId}`,
                    type: 'PUT',
                    data: JSON.stringify(taskData),
                    contentType: 'application/json',
                    success: function () {
                        $('#taskModal').modal('hide');
                        loadTasks();
                    }
                });
            }

            $(document).on('click', '.deleteBtn', function () {
                const taskId = $(this).data('id');

                if (confirm("Are you sure you want to delete this task?")) {
                    $.ajax({
                        url: `${apiBaseUrl}/${taskId}`,
                        type: 'DELETE',
                        success: function () {
                            loadTasks();
                        }
                    });
                }
            });

            $(document).on('click', '.editBtn', function () {
                const taskId = $(this).data('id');

                $.get(`${apiBaseUrl}/${taskId}`, function (task) {
                    $('#taskModalLabel').text('Edit Task');
                    $('#taskId').val(task.taskId);
                    $('#taskName').val(task.taskName);
                    $('#assignedToUserId').val(task.assignedToUserId);
                    $('#projectId').val(task.projectId);
                    $('#status').val(task.status);
                    $('#priority').val(task.priority);
                    $('#taskStartDate').val(task.taskStartDate);
                    $('#taskEndDate').val(task.taskEndDate);
                    $('#description').val(task.description);
                    $('#taskModal').modal('show');
                });
            });
        });
    </script>

    <!-- Bootstrap JS -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>
</body>
</html>



